@model PagedList.IPagedList<BlogNew.Models.UserViewModel>
@using PagedList.Mvc;
@using BlogNew.Controllers;
@{
    ViewBag.Title = "Manage Users";
}

<h2 class="my-5">Manage Users</h2>

<div class="mb-4 d-flex justify-content-between">
    @using (Html.BeginForm("Index", "Users", FormMethod.Get))
    {
        <div class="d-flex gap-2">
            <div><span>Role: </span>@Html.DropDownList("roleFilter")</div>
            <div><span>User/Email: </span>@Html.TextBox("search", ViewBag.currentSearch as string)</div>
            @if (!string.IsNullOrWhiteSpace(ViewBag.currentSort))
            {
                <input name="sortOrder" type="hidden" value="@ViewBag.currentSort">
            }
            <input type="submit" value="Filter" />
        </div>
    }
    <div class="mb-3">@Html.ActionLink("New User", "Create", null, new { @class = "link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" })</div>
</div>
<table class="table table-hover table-bordered">
    <thead>
        <tr>
            @if (Model.Count > 0)
            {
                <th scope="col">@Html.DisplayNameFor(model => model[0].Username)</th>
                <th scope="col">@Html.DisplayNameFor(model => model[0].Email)</th>
                <th scope="col">@Html.DisplayNameFor(model => model[0].Roles)</th>
                <th scope="col"><a class="text-decoration-none" href=@string.Format("/Users?sortOrder={0}{1}", ViewBag.DisabledSortArg, UsersController.AppendSearchRouteValue(ViewBag.currentSearch, ViewBag.currentFilter))>Disabled @UsersController.SetDisabledIcon(ViewBag.currentSort)</a></th>
                <th scope="col">Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td scope="row">@Html.DisplayFor(modelItem => item.Username)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Roles)</td>
                <td>@Html.DisplayFor(modelItem => item.IsDisabled)</td>
                <td>
                    @Html.ActionLink("Posts", "Posts", new { id = item.UserId }, new { @class = "link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" }) |
                    @Html.ActionLink("Edit", "Edit", new { id = item.UserId }, new { @class = "link-success link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.UserId }, new { @class = "link-danger link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, search = ViewBag.currentSearch, roleFilter = ViewBag.currentFilter, sortOrder = ViewBag.currentSort }))
</div>
