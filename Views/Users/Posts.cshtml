@model PagedList.IPagedList<BlogNew.Models.Post>
@using PagedList.Mvc;
@{
    ViewBag.Title = $"{ViewBag.Username}'s Posts";
}

<style>
    .date {
        font-size: 0.85rem;
        color: lightslategrey;
    }
    .title-link {
        text-decoration: none;
        color: inherit;
    }
</style>
<main style="max-width:1000px; margin-inline:auto">
    @if (ViewBag.IsAdmin)
    {
        <div class="d-grid gap-2 my-5">
            <h2 style="color:midnightblue;">@ViewBag.Title</h2>
            <div class="d-flex gap-3">
                @Html.ActionLink("Back to Users", "Index", null, new { @class = "link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" })
                @Html.ActionLink($"Edit {ViewBag.Username}", "Edit", new { id = ViewBag.UserId }, new { @class = "link-success link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" })
                @Html.ActionLink($"Delete {ViewBag.Username}", "Delete", new { id = ViewBag.UserId }, new { @class = "link-danger link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" })
            </div>
        </div>
    }
    else
    {
        <h2 class="my-5 text-decoration-underline text-primary-emphasis">@ViewBag.Title</h2>
    }

    <div class="d-grid gap-2 mb-4 fs-5">
        @foreach (var post in Model)
        {
            <div class="pb-4 mb-4" style="border-bottom: 1px solid #EBF2F6;">
                <article>
                    <h3 class="fw-bold">@Html.ActionLink(post.Title, "Details", "Posts", new { id = post.PostId}, new { @class="title-link" } )</h3>
                    <p>@post.Sinopse</p>
                    <div class="d-flex gap-2">
                        <time class="date"><i class="bi bi-calendar me-2"></i>@post.CreatedAt.ToShortDateString()</time>
                    </div>
                </article>
            </div>
        }
    </div>

    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Posts",
            new { page, search = ViewBag.currentSearch, roleFilter = ViewBag.currentFilter, sortOrder = ViewBag.currentSort }))
    </div>
</main>

